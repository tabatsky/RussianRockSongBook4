plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    namespace 'jatx.russianrocksongbook.domain.usecase.local'
}

dependencies {

    implementation "androidx.core:core-ktx:$core_ktx_version"

    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    api "androidx.documentfile:documentfile:$document_file_version"

    api "androidx.compose.ui:ui:$compose_version"

    api "io.reactivex.rxjava2:rxjava:$rxjava_version"
    api "io.reactivex.rxjava2:rxandroid:$rxandroid_version"

    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

    api project(':core:debug')
    api project(':domain-layer:models:cloud')
    api project(':domain-layer:models:local')
    api project(':domain-layer:repository:cloud')
    api project(':domain-layer:repository:filesystem')
    api project(':domain-layer:repository:local')
    api project(':domain-layer:repository:preferences')

    testImplementation "junit:junit:$junit_version"
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"
    testImplementation "androidx.arch.core:core-testing:$core_testing_version"
}