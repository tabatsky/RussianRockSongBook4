plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 34

    defaultConfig {
        applicationId "jatx.russianrocksongbook"
        minSdk 21
        targetSdk 34
        versionCode 99
        versionName "5.6.3"

        testInstrumentationRunner "jatx.russianrocksongbook.HiltTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion versions.composeCompiler
    }
    packagingOptions {
        resources {
            excludes += [
                    'META-INF/AL2.0',
                    'META-INF/LGPL2.1',
                    'MANIFEST.MF',
                    'META-INF/LICENSE.md',
                    'META-INF/LICENSE-notice.md'
            ]
        }
    }
    namespace 'jatx.russianrocksongbook'
    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }
}

dependencies {
    implementation commonDeps.coroutines
    implementation commonDeps.coreKtx
    implementation commonDeps.material
    implementation commonDeps.activityCompose
    implementation commonDeps.composeUi
    implementation commonDeps.composeMaterial
    implementation commonDeps.composeUiTooling
    implementation commonDeps.navigationCompose
    implementation commonDeps.lifecycleRuntime
    implementation commonDeps.lifecycleViewmodel

    implementation diDeps.hiltAndroid
    kapt diDeps.hiltCompiler
    implementation diDeps.hiltExtensions
    kapt diDeps.hiltExtensionsProcessor

    api project(':presentation-layer:localSongs')
    api project(':presentation-layer:cloudSongs')
    api project(':presentation-layer:addArtist')
    api project(':presentation-layer:addSong')
    api project(':presentation-layer:donation')
    api project(':presentation-layer:settings')
    api project(':presentation-layer:start')

    api project(':presentation-layer:helpers:addSongsFromDirHelper')
    api project(':presentation-layer:helpers:donationHelper')
    api project(':presentation-layer:helpers:musicHelper')

    api project(':core:testing')

    // testing

    debugImplementation testDeps.mockkAndroid

    testImplementation testDeps.androidXCore
    testImplementation testDeps.androidXRunner
    testImplementation testDeps.androidXTruth
    testImplementation testDeps.androidXRules

    testImplementation testDeps.androidXJUnit

    testImplementation testDeps.androidXCoreTesting

    androidTestImplementation testDeps.androidXCore
    androidTestImplementation testDeps.androidXRunner
    androidTestImplementation testDeps.androidXTruth
    androidTestImplementation testDeps.androidXRules

    androidTestImplementation testDeps.androidXJUnit

    androidTestImplementation testDeps.androidXCoreTesting

    debugImplementation testDeps.androidXMonitor

    androidTestImplementation testDeps.espressoCore
    androidTestImplementation testDeps.espressoContrib

    androidTestImplementation testDeps.hamcrest

    androidTestImplementation testDeps.hiltAndroidTesting
    kaptAndroidTest testDeps.hiltAndroidCompiler

    androidTestImplementation testDeps.composeUiTest
    androidTestImplementation testDeps.composeUiTestJunit
    debugImplementation testDeps.composeUiTestManifest

    debugImplementation testDeps.kotlinReflect

    androidTestImplementation testDeps.leakCanary

    androidTestUtil testDeps.androidXOrchestrator
}